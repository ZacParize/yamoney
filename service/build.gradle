archivesBaseName = 'money-yandex'
group = parent.group
version = parent.version

apply plugin: 'org.springframework.boot'

springBoot {
    mainClassName = "${servicePackage}.ServiceApplication"
}

dependencyManagement {
    resolutionStrategy {
        cacheDynamicVersionsFor 5, 'minutes'
        cacheChangingModulesFor 0, 'minutes'
    }
}

dependencies {

    annotationProcessor "org.projectlombok:lombok:$ver.lombok"
    
    testAnnotationProcessor "org.projectlombok:lombok:$ver.lombok"

    compileOnly "org.springframework.boot:spring-boot-configuration-processor:$ver.springBoot",
                "org.projectlombok:lombok:$ver.lombok"

    compile "org.apache.commons:commons-lang3:$ver.apacheCommons",
            "org.postgresql:postgresql:$ver.postgres",
            "org.flywaydb:flyway-core:$ver.flyway",
            "javax.validation:validation-api:$ver.validationApi"

    compile "org.springframework.boot:spring-boot-starter-undertow:$ver.springBoot",
            "org.springframework.boot:spring-boot-starter-actuator:$ver.springBoot",
            "org.springframework.boot:spring-boot-starter-data-rest:$ver.springBoot",
            "org.springframework.boot:spring-boot-starter-data-jpa:$ver.springBoot",
            "org.springframework.boot:spring-boot-starter-web:$ver.springBoot",
            "org.springframework.boot:spring-boot-starter-aop:$ver.springBoot",
            "org.springframework.boot:spring-boot-starter-parent:$ver.springBoot"

    compile "org.springframework.cloud:spring-cloud-starter-config:$ver.springCloud",
            "org.springframework.cloud:spring-cloud-starter-netflix-hystrix:$ver.springCloud",
            "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$ver.springCloud"

    compile "org.hibernate:hibernate-validator:$ver.hibernate",
            "org.hibernate:hibernate-core:$ver.hibernate",
            "org.hibernate:hibernate-entitymanager:$ver.hibernate",
            "org.hibernate:hibernate-java8:$ver.hibernate"

    testCompile "org.springframework.boot:spring-boot-starter-test:$ver.springBoot",
                "org.junit.jupiter:junit-jupiter-api:$ver.junit",
                "org.junit.jupiter:junit-jupiter-params:$ver.junit",
                "org.junit.vintage:junit-vintage-engine:$ver.junit",
                "org.testcontainers:testcontainers:$ver.testcontainers"

    testCompileOnly "org.projectlombok:lombok:$ver.lombok"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$ver.junit"
}

configurations.all {
    all*.exclude group: 'com.vaadin.external.google'
    all*.exclude group: "commons-logging", module: "commons-logging"
    all*.exclude group: "log4j"
    all*.exclude group: "org.apache.logging.log4j"
    all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
    all*.exclude group: "org.slf4j", module: "slf4j-simple"
    all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
}

//allow to put resources next to java code
sourceSets {
    test {
        resources {
            srcDirs += test.java.srcDirs
            exclude '**/*.java'
        }
    }
}